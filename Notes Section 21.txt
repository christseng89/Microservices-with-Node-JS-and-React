21-458. The Payments Service
### Orders Services => Order-created, Order-cancelled;
### Payments Services => Payment-created;
// ### Refunds Services => Refund-created;

21-460. Initial Setup
cd ticketing
md payments
md payments\src
md payments\src\__mocks__
md payments\src\test
md payments\src\models
md payments\src\routes
md payments\src\events

cd payments
copy ..\tickets\.dockerignore
copy ..\tickets\Dockerfile
copy ..\tickets\package.json
copy ..\tickets\tsconfig.json

copy ..\tickets\src\index.ts src\index.ts
copy ..\tickets\src\app.ts src\app.ts
copy ..\tickets\src\nats-wrapper.ts src\nats-wrapper.ts
copy ..\tickets\src\__mocks__\* src\__mocks__\*
copy ..\tickets\src\test\* src\test\*

// package.json
{
  "name": "payments", ***
  
npm i

// index.ts app.ts (remove unavailable imports)

// Build image - payments
minikube image build -t christseng89/payments .
minikube image push christseng89/payments  
minikube image ls | grep payments
  docker.io/christseng89/payments:latest

// skaffold.yaml
    - image: christseng89/payments ***
      # - image: us.gcr.io/ticketing-com-353405/payments
      context: payments
      docker:
        dockerfile: Dockerfile
      sync:

// k8s\payments-depl.yaml & payments-mongo-depl.yaml (new)

### Skaffold
  [expiration] Connected to NATS
  [payments] Connected to NATS
  [payments] Connected to MongoDb
  [payments] Listening on port 3000!!!!!!!!
  [auth] Connected to MongoDb
  [auth] Listening on port 3000!!!!!!!!
  [tickets] Connected to NATS
  [tickets] Connected to MongoDb
  [tickets] Listening on port 3000!!!!!!!!
  [orders] Connected to NATS
  [orders] Connected to MongoDb
  [orders] Listening on port 3000!!!!!!!!

21-462. Another Order Model!
// order.ts (new)

21-464. Replicating Orders ~ 465. Testing Order Creation
### Payments
// order.ts
orderSchema.statics.build = (attrs: OrderAttrs) => {
  return new Order({ ***
    ...attrs,
    _id: attrs.id,
  });
};

// order-created-listener.ts, queue-group-name, order-created-listener.test.ts (new)

npm run test

21-466. Marking an Order as Cancelled ~ 468. Starting the Listeners
// order-cancelled-listener.ts order-cancelled-listener.test.ts (new) 

// index.ts
...
import { OrderCreatedListener } from './events/listeners/order-created-listener';
import { OrderCancelledListener } from './events/listeners/order-cancelled-listener';
...
    // Start listening for orders events
    new OrderCreatedListener(natsWrapper.client).listen();
    new OrderCancelledListener(natsWrapper.client).listen();
...

### skaffold
  [auth] Connected to MongoDb
  [auth] Listening on port 3000!!!!!!!!
  [tickets] Connected to NATS
  [tickets] Connected to MongoDb
  [tickets] Listening on port 3000!!!!!!!!
  [orders] Connected to NATS
  [orders] Connected to MongoDb
  [orders] Listening on port 3000!!!!!!!!
  [payments] Connected to NATS
  [payments] Connected to MongoDb
  [payments] Listening on port 3000!!!!!!!!

### Postman
= New Ticket
= New Order
= Cancel Order

### skaffold
// New Order
  [payments] Message #1 received from subject order:created/payments-service, with data {
  [payments]   id: '62da247e5298fdf078ba4d08',
  [payments]   version: 0,
  [payments]   userId: '62d7d247a5ceeda643abfe84',
  [payments]   status: 'created',
  [payments]   expiresAt: '2022-07-22T04:30:58.683Z',
  [payments]   ticket: { id: '62da2478d0d54b85c1ae446a', price: 1.2 }
  [payments] }

// Cancel Order
  [payments] Message #1 received from subject order:cancelled/payments-service, with data {
  [payments]   id: '62da247e5298fdf078ba4d08',
  [payments]   version: 1,
  [payments]   ticket: { id: '62da2478d0d54b85c1ae446a' }
  [payments] }

21-469. Payments Flow with Stripe JS ~ 470. Implementing the Create Charge Handler
// refer to diagram
https://stripe.com/docs/js/initializing

// routes/new.ts (new, incomplete)

// app.ts
...
app.use(currentUser);
app.use(createChargeRouter); ***
...

// ingress-srv.yaml 
...
  - path: /api/payments/?(.*) ***
    pathType: Prefix
    backend:
      service:
        name: payments-srv
        port:
          number: 3000
  - path: /?(.*)

### Postman
= New Payment (with empty body {})
