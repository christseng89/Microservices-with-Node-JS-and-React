04-65. A Kubernetes Tour
kubectl version --short
  Client Version: v1.24.0
  Kustomize Version: v4.5.4
  Server Version: v1.23.3

04-68. Creating a Pod
kubectl apply -f posts.yaml
    pod/posts created
kubectl get po
  NAME    READY   STATUS    RESTARTS   AGE
  posts   1/1     Running   0          8s

04-74. Creating a Deployment
kubectl delete pod posts
kubectl apply -f posts-depl.yaml
kubectl get po
  NAME                         READY   STATUS    RESTARTS   AGE
  posts-depl-fd4d84f79-6v258   1/1     Running   0          9s
  posts-depl-fd4d84f79-l7ndl   1/1     Running   0          9s

kubectl get deploy
  NAME         READY   UP-TO-DATE   AVAILABLE   AGE
  posts-depl   2/2     2            2           15s

kubectl describe deploy posts-depl
  Name:                   posts-depl
  Namespace:              default
  CreationTimestamp:      Thu, 09 Jun 2022 18:22:39 +0800
  Labels:                 <none>
  Annotations:            deployment.kubernetes.io/revision: 1
  Selector:               app=posts
  ...

kubectl delete -f posts-depl.yaml
kubectl apply -f posts-depl.yaml

04-79. Creating a NodePort Service
kubectl apply -f posts-srv.yaml
kubectl get svc 
  NAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE
  kubernetes   ClusterIP   10.96.0.1       <none>        443/TCP          2d11h
  posts-srv    NodePort    10.106.205.88   <none>        4000:32116/TCP   22s

kubectl describe svc posts
  Name:                     posts-srv
  Namespace:                default
  Labels:                   <none>
  Annotations:              <none>
  Selector:                 app=posts
  Type:                     NodePort
  IP Family Policy:         SingleStack
  IP Families:              IPv4
  IP:                       10.106.205.88
  IPs:                      10.106.205.88
  Port:                     posts  4000/TCP
  TargetPort:               4000/TCP
  NodePort:                 posts  32116/TCP // External port
  Endpoints:                <none>
  Session Affinity:         None
  External Traffic Policy:  Cluster
  Events:                   <none>

minikube ip
  192.168.59.100

http://192.168.59.100:32116/posts
  {}

04-82. Building a Deployment for the Event Bus
kubectl apply -f event-bus-depl.yaml
  deployment.apps/event-bus-depl unchanged
  service/event-bus-srv created

kubectl apply -f posts-depl.yaml 
  deployment.apps/posts-depl unchanged
  service/posts-clusterip-srv created

kubectl get po
  NAME                             READY   STATUS    RESTARTS   AGE
  event-bus-depl-dd87dfc6c-ggkdl   1/1     Running   0          13s ***
  event-bus-depl-dd87dfc6c-m2pbt   1/1     Running   0          13s ***
  posts-depl-fd4d84f79-kp7dl       1/1     Running   0          3h39m
  posts-depl-fd4d84f79-vtd2m       1/1     Running   0          3h39m

kubectl get svc
  NAME                  TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE
  event-bus-srv         ClusterIP   10.98.255.181   <none>        4005/TCP         5m54s***
  kubernetes            ClusterIP   10.96.0.1       <none>        443/TCP          2d16h
  posts-clusterip-srv   ClusterIP   10.96.244.194   <none>        4000/TCP         25s***
  posts-srv             NodePort    10.96.241.54    <none>        4000:32116/TCP   3h52m

kubectl logs posts-depl-fd4d84f79-kp7dl        
  > posts@1.0.0 start
  > nodemon index.js

  [nodemon] 2.0.16
  [nodemon] to restart at any time, enter `rs`
  [nodemon] watching path(s): *.*
  [nodemon] watching extensions: js,mjs,json
  [nodemon] starting `node index.js`
  Listening on 4000

04-84. How to Communicate Between Services (Wind it up)
### External 32116 <=> posts-clusterip-srv:4000 <=> event-bus-srv:4005

// Posts, Comments, Query, Moderation
.env
npm i dotenv
require('dotenv').config();
...
const axios = require('axios');
const ebCIPHost = process.env.ebCIPHost || 'localhost';
// console.log(ebCIPHost);
...
await axios.post(`http://${ebCIPHost}:4005/events`, {
  ...
  