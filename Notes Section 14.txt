14-285. NATS Streaming Server Notice
// NATS Streaming Server will be deprecated after June of 2023. 
https://github.com/nats-io/nats-streaming-server#warning--deprecation-notice-warning

14-286. Three Important Items
https://docs.nats.io/

https://docs.nats.io/nats-concepts/jetstream
https://hub.docker.com/_/nats-streaming

// Commandline Options

14-287. Creating a NATS Streaming Deployment
// nats-depl.yaml (new)

kubectl get all | grep nats
  pod/nats-depl-b969fb585-7trgq             1/1     Running   0          5m30s
  service/nats-srv            ClusterIP   10.97.216.244    <none>        4222/TCP,8222/TCP   5m31s
  deployment.apps/nats-depl            1/1     1            1           5m31s
  replicaset.apps/nats-depl-b969fb585             1         1         1       5m31s

14-293. Big Notes on NATS Streaming
https://www.npmjs.com/package/node-nats-streaming

14-294. Building a NATS Test Project & 295. Port-Forwarding with Kubectl
cd ticketing
md nats-test
cd nats-test
md src

npm init -y
npm i node-nats-streaming ts-node-dev typescript @types/node
tsc --init

// package.json
  "scripts": {
    "publish": "ts-node-dev --notify false src/publisher.ts",
    "listen": "ts-node-dev --notify false src/listener.ts",
    "test": "echo \"Error: no test specified\" && exit 1"
  },

// Stop skaffold dev
kubectl get po | grep nats
  nats-depl-b969fb585-7trgq             1/1     Running   0          19h

kubectl port-forward nats-depl-b969fb585-7trgq 4222:4222
  Forwarding from 127.0.0.1:4222 -> 4222
  Forwarding from [::1]:4222 -> 4222

cd ticketing\nats-test
npm run publish
  > nats-test@1.0.0 publish
  > ts-node-dev --notify false src/publisher.ts

  [INFO] 14:23:06 ts-node-dev ver. 2.0.0 (using ts-node ver. 10.8.2, typescript ver. 4.7.4)       
  Publisher connected to NATS

14-296. Publishing Events
// publisher.ts
...
stan.on('connect', () => {
  console.log('Publisher connected to NATS');

  const data = JSON.stringify({ // ***
    id: '123',
    title: 'concert',
    price: 20,
  });

  stan.publish('ticket:created', data, () => {
    console.log('Event published');
  });
});

// npm run publish (updates ...)
  [INFO] 14:32:44 Restarting: D:\development\React\Microservices-with-NodeJS-and-React\ticketing\nats-test\src\publisher.ts has been modified
  Publisher connected to NATS
  Event published

// package.json (add in the --rs to each command)
  "scripts": {
    "publish": "ts-node-dev --rs --notify false src/publisher.ts",
    "listen": "ts-node-dev --rs --notify false src/listener.ts",
    "test": "echo \"Error: no test specified\" && exit 1"
  },

npm run publish

14-298. Listening For Data
// listener.ts (new)
// publisher.ts 
console.clear();
npm run publish
  Publisher connected to NATS
  Event published
  rs // manual input ***

cd ticketing\nats-test
npm run listen
  Listener connected to NATS
  Message received
  Message received
  Message received // *** after each rs
  ...

14-299. Accessing Event Data
// listener.ts
import nats, { Message } from 'node-nats-streaming'; ***

...
  subscription.on('message', (msg: Message) => {
    console.log(`Received event: #${msg.getSequence()}, with data ${msg.getData()}`);
  });
});

npm run listen
  Listener connected to NATS
  Received event: #9, with data {"id":"1234","title":"Concert","price":23.99}
  Received event: #10, with data {"id":"1234","title":"Concert","price":23.99}

14-300. Client ID Generation
// listener.ts
import { randomBytes } from 'crypto'; ***

console.clear();
const stan = nats.connect('ticketing', randomBytes(4).toString('hex'), { ***
  url: 'http://localhost:4222',
});

// multiple clients to listen the same subject
